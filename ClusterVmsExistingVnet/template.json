{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string"
        },
        "namePrefix": {
            "type": "string",
            "minLength": 3,
            "maxLength": 9,
            "metadata": {
              "description": "Naming prefix for each new resource created. 3-char min, 9-char max, lowercase alphanumeric"
            }
        },
        "virtualMachineSize": {
            "type": "string"
        },
        "adminUsername": {
            "type": "string"
        },
        "virtualNetworkName": {
            "type": "string"
        },
        "domainName": {
            "type": "string"
        },
        "domainUserName":{
            "type":"string"
        },
        "domainUserPassword": {
            "type": "securestring"
        },
        "networkSecurityGroupName":{
            "type": "string"
        },
        "adminPassword": {
            "type": "securestring"
        },
        "availabilitySetName": {
            "type": "string"
        },
        "vmcount": {
            "type": "int",
            "minValue": 2,
            "maxValue": 3,
            "metadata": {
                "description": "Number of VMs to be created in cluster (Min=2, Max=3)"
            }
        },
        "diagnosticsStorageAccountName": {
            "type": "string"
        },
        "diagnosticsStorageAccountId": {
            "type": "string"
        },
        "subnetName": {
            "type": "string"
        },
        "msiExtensionName": {
            "type": "string"
        },
        "sqlConnectivityType": {
            "type": "string"
        },
        "sqlPortNumber": {
            "type": "int"
        },
        "sqlStorageDisksCount": {
            "type": "int"
        },
        "sqlStorageWorkloadType": {
            "type": "string"
        },
        "sqlStorageDisksConfigurationType": {
            "type": "string"
        },
        "sqlStorageStartingDeviceId": {
            "type": "int"
        },
        "sqlStorageDeploymentToken": {
            "type": "int"
        },
        "sqlAutopatchingDayOfWeek": {
            "type": "string"
        },
        "sqlAutopatchingStartHour": {
            "type": "string"
        },
        "sqlAutopatchingWindowDuration": {
            "type": "string"
        },
        "sqlAuthenticationLogin": {
            "type": "string"
        },
        "sqlAuthenticationPassword": {
            "type": "securestring"
        },
        "rServicesEnabled": {
            "type": "string"
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
              "description": "Location of resources that the script is dependent on such as linked templates and DSC modules"
            },
            "defaultValue": "https://raw.githubusercontent.com/aultt/ARM/master/ClusterVmsExistingVnet" 
          },
          "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
              "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
            },
            "defaultValue": ""
          }
    },
    "variables": {
        "vnetId": "[resourceId('tim-core-prod-rg','Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
        "diagnosticsExtensionName": "Microsoft.Insights.VMDiagnosticsSettings",
        "vmNamePrefix": "[concat(parameters('namePrefix'),'-N')]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[parameters('availabilitySetName')]",
            "sku": {
                "name": "Aligned"
            },
            "apiVersion": "2018-06-01",
            "location": "[parameters('location')]",
            "properties": {
              "platformFaultDomainCount": 3,
              "platformUpdateDomainCount": 5,
              "virtualMachines": []
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('vmNamePrefix'), copyIndex(1))]",
            "apiVersion": "2018-06-01",
            "location": "[parameters('location')]",
            "copy": {
              "name": "virtualMachineLoop",
              "count": "[parameters('vmCount')]"
            },
            "dependsOn": [
                "[concat(variables('vmNamePrefix'), copyIndex(1), '-nic')]","[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[concat(variables('vmNamePrefix'),copyindex(1))]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "provisionVmAgent": "true"
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftSQLServer",
                        "offer": "SQL2016SP1-WS2016",
                        "sku": "Enterprise",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "createOption": "empty",
                            "lun": 0,
                            "diskSizeGB": "1023",
                            "caching": "ReadOnly",
                            "managedDisk": {
                                "storageAccountType": "StandardSSD_LRS"
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmNamePrefix'), copyindex(1), '-nic'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', parameters('diagnosticsStorageAccountName'), '.blob.core.windows.net/')]"
                    }
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
                }
            },
            "identity": {
                "type": "systemAssigned"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmNamePrefix'), copyIndex(1),'/DSC')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('location')]",
            "copy": {
                "name": "DSCLoop",
                "count": "[parameters('vmCount')]"
              },
            "dependsOn": [
              "[concat('Microsoft.Compute/virtualMachines/', variables('vmNamePrefix'), copyIndex(1))]"
            ],
            "properties": {
              "publisher": "Microsoft.Powershell",
              "type": "DSC",
              "typeHandlerVersion": "2.73",
              "autoUpgradeMinorVersion": true,
              "settings": {
                  "wmfversion" :"latest",
                  "configuration": {
                      "url": "https://raw.githubusercontent.com/aultt/ARM/master/VmsExistingVnet/dsc/Join-machines-domain.ps1.zip",
                      "script": "Join-machines-domain.ps1",
                      "function" : "AddMachinetoDomain"
                  },
                "configurationArguments": {
                    "domainName": "[parameters('domainName')]"
                    }
                },
              "protectedSettings": {
                "configurationArguments": {
                    "adminCreds": {
                    "userName": "[parameters('domainUsername')]",
                    "password": "[parameters('domainUserPassword')]"
                        }
                    }
                }   
            }
        },
        {
            "name": "[concat(variables('vmNamePrefix'), copyIndex(1), '-nic')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-04-01",
            "location": "[parameters('location')]",
            "copy":{
              "name": "nicloop",
              "count": "[parameters('vmCount')]"  
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('tim-sql-prod-rg', 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
                }
            }
        },
        {
            "name": "[parameters('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2018-08-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": []
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
    
}