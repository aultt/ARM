{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "VMName": {
      "type": "string",
      "minLength": 8
    },
    "localAdminUserName": {
      "type": "string",
      "minLength": 5
    },
    "localAdminPassword": {
      "type": "securestring"
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "Enterprise",
      "allowedValues": [
        "Enterprise",
        "Standard",
        "Express",
        "Web",
        "SQLDEV"
      ]
    },
    "imageOffer":{
      "type": "string",
      "defaultValue": "SQL2017-WS2016",
      "allowedValues": [
        "SQL2016SP2-WS2016",
        "SQL2016SP2-WS2016-BYOL",
        "SQL2017-WS2016",
        "SQL2017-WS2016-BYOL"
      ]
    },
    "existingdomainName": {
      "type": "string",
      "metadata": {
        "description": "DNS domain name for existing Active Directory domain"
      }
    },
    "domainUsername": {
      "type": "string",
      "metadata": {
        "description": "Name of the domain user in the existing Active Directory Domain with permissions to Add Computers"
      }
    },
    "domainUserPassword": {
      "type": "securestring",
      "minLength": 12,
      "metadata": {
        "description": "Password for the domain user in the existing Active Directory Domain with permissions to Add Computers"
      }
    },
    "existingvirtualNetworkName": {
      "type": "string",
      "defaultValue": "tia-prod-vnet"
    },
    "existingvirtualNetworkResourceGroup": {
      "type": "string",
      "defaultValue": "tia-core-prod-rg"
    },
    "existingSubnetName":{
      "type": "string",
      "defaultValue": "data"
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "Size of the VMs to be created"
      },
      "defaultValue": "Standard_D2s_v3"
    },
    "vmDiskSize": {
      "type": "int",
      "minValue": 64,
      "maxValue": 1023,
      "metadata": {
        "description": "Size of each data disk in GB on each VM (Min=128, Max=1023)"
      },
      "defaultValue": 64
    },
    "vmDiskCount": {
      "type": "int",
      "minValue": 2,
      "maxValue": 32,
      "metadata": {
        "description": "Number of data disks on each VM (Min=2, Max=32). Ensure that the VM size you've selected will support this number of data disks."
      },
      "defaultValue": 3
    },
    "diskCaching": {
      "type": "string",
      "defaultValue": "ReadOnly"
    },
        "datadriveLetter" :{
      "type": "string",
      "metadata": {
        "description": "Drive letter for the Data drive which will be created on Storage Space"
      },
      "defaultValue": "G"
    },
    "datadrivelabel" :{
      "type": "string",
      "metadata":{
        "description": "Label to associate with Data drive once formated"
      },
      "defaultValue": "SQLDATA"
    },
    "datadrivesize" :{
      "type": "string",
      "metadata": {
        "description": "Size of volume to be created for Data Drive"
      },
      "defaultValue": "5GB"
    },
    "logdriveLetter" :{
      "type": "string",
      "metadata": {
        "description": "Drive letter for the Log drive which will be created on Storage Space"
      },
      "defaultValue": "F"
    },
    "logdrivelabel" :{
      "type": "string",
      "metadata":{
        "description": "Label to associate with Log drive once formated"
      },
      "defaultValue": "Logs"
    },
    "logdrivesize" :{
      "type": "string",
      "metadata": {
        "description": "Size of volume to be created for Log Drive"
      },
      "defaultValue": "5GB"
    },
    "tempdbdriveLetter" :{
      "type": "string",
      "metadata": {
        "description": "Drive letter for the TempDB drive which will be created on Storage Space"
      },
      "defaultValue": "T"
    },
    "tempdbdrivelabel" :{
      "type": "string",
      "metadata":{
        "description": "Label to associate with TempDB drive once formated"
      },
      "defaultValue": "TempDB"
    },
    "tempdbdrivesize" :{
      "type": "string",
      "metadata": {
        "description": "Size of volume to be created for TempDB Drive"
      },
      "defaultValue": "5GB"
    },
    "SQLFeatures" :{
      "type": "string",
      "metadata": {
        "description": "Features to install"
      },
      "defaultValue": "SQLENGINE"
    },
    "SQLInstanceName" :{
      "type": "string",
      "metadata": {
        "description": "SQL Server Instance Name"
      },
      "defaultValue": "MSSQLSERVER"
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
      },
      "defaultValue": "https://raw.githubusercontent.com/aultt/ARM/master/SQLStandAlone" 
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      },
      "defaultValue": ""
    }
  },
  "resources": [
    {
      "name": "[variables('mssqlNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "eastus",
      "apiVersion": "2016-03-30",
      "dependsOn": [ ],
      "tags": {
        "displayName": "mssqlNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('mssqlSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('VMName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-04-30-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('mssqlNicName'))]"
      ],
      "tags": {
        "displayName": "mssql"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmsize')]"
        },
        "osProfile": {
          "computerName": "[parameters('VMName')]",
          "adminUsername": "[parameters('localAdminUsername')]",
          "adminPassword": "[parameters('localAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('mssqlImagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('vmName'),'-OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
                "storageAccountType": "Premium_LRS"
            }
          },
          "copy": [
            {
                "name": "dataDisks",
                "count": "[parameters('vmDiskCount')]",
                "input": {
                    "name":"[concat(parameters('vmName'),'-Data', copyIndex('dataDisks'))]", 
                    "diskSizeGB": "[parameters('vmDiskSize')]",
                    "lun": "[copyIndex('dataDisks')]",
                    "createOption": "Empty",
                    "caching":"[parameters('diskCaching')]"
                }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('mssqlNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "Microsoft.Powershell.DSC",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2016-03-30",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('VMName'))]"
          ],
          "tags": {
            "displayName": "mssqlconfig"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.20",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "modulesUrl": "[variables('DSCConfigModulesURL')]",
              "configurationFunction": "[variables('DSCConfigurationFunction')]",
              "properties": {
                "domainName": "[parameters('existingdomainName')]",
                "domainuserCreds": {
                  "userName": "[parameters('domainUserName')]",
                  "password": "PrivateSettingsRef:domainuserPassword"
                  },
                  "localadminCreds": {
                    "userName": "[parameters('localadminuserName')]",
                    "password": "PrivateSettingsRef:localadminPassword"  
                  },
                  "datadriveletter" : "[parameters('datadriveletter')]",
                  "datadrivesize" : "[parameters('datadrivesize')]",
                  "datadrivelabel" : "[parameters('datadrivelabel')]",
                  "logdriveletter" : "[parameters('logdriveletter')]",
                  "logdrivesize" : "[parameters('logdrivesize')]",
                  "logdrivelabel" : "[parameters('logdrivelabel')]",
                  "tempdbdriveletter" : "[parameters('tempdbdriveletter')]",
                  "tempdbdrivesize" : "[parameters('tempdbdrivesize')]",
                  "tempdbdrivelabel" : "[parameters('tempdbdrivelabel')]",
                  "sqlfeatures" : "[parameters('SQLFeatures')]",
                  "sqlinstancename" : "[parameters('sqlInstanceName')]"
                }
              },
            "protectedSettings": {
              "items": {
              "configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]",
              "domainuserPassword": "[parameters('domainuserPassword')]",
              "localAdminPassword": "[parameters('localAdminPassword')]"
              }
            }
            } 
          }
        ]
      }
    ],
  "outputs": {},
  "variables": {
    "mssqlImagePublisher": "MicrosoftSQLServer",
    "mssqlVnetID": "[resourceId(parameters('existingvirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('existingvirtualNetworkName'))]",
    "mssqlSubnetRef": "[concat(variables('mssqlVnetID'), '/subnets/', parameters('existingSubnetName'))]",
    "mssqlNicName": "[concat(parameters('VMName'), 'NetworkInterface')]",
    "DSCConfigModulesURL": "[concat(parameters('_artifactsLocation'), '/dsc/StandAlone.ps1.zip', parameters('_artifactsLocationSasToken'))]",
    "DSCConfigurationFunction": "StandAlone.ps1\\StandAlone"
  }
}
